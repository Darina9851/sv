[global_tags]
  user = "rquenten"

[[inputs.mem]]
# Метрики можно направлять на разные выходы, используя имя метрики и теги:
[[outputs.influxdb]]
  urls = ["http://influxdb-service:8086"]
  database = "telegraf"
  username = "telegraf"
  password = "1111"
# Интервалы - это длительности времени, и их можно указать для вспомогательных настроек,
# объединив целочисленное значение и единицу времени в виде строкового значения. Допустимые единицы времени являются ns, us(или µs), ms, s, m, h.
[agent]
  interval = "10s" 					# По умолчанию сбора данных интервал для всех входов.

  round_interval = true 			# округляет интервал сбора до интервала, т.е. если interval = "10s", то всегда собирать: 00 ,: 10,: 20 и т. д.

  metric_batch_size = 1000			# Telegraf будет отправлять метрики на выходы в пакетах максимум из метрик metric_batch_size. Это контролирует 
  									# размер записей, которые Telegraf отправляет в выходные плагины.

  metric_buffer_limit = 1000		# максимальное количество незаписанных метрик на один вывод. Увеличение этого значения позволяет увеличить 
  									# время простоя вывода без потери показателей за счет более высокого максимального использования памяти.

  collection_jitter = "0s"			# джиттер коллекции используется для смещения коллекции на случайный интервал . Каждый плагин засыпает 
  									# случайное время в пределах джиттера перед сбором. Это можно использовать, чтобы избежать одновременного 
									# запроса многими плагинами таких вещей, как sysfs, что может оказать ощутимое влияние на систему.

  flush_interval = "5s"				# Интервал промывки по умолчанию для всех выходов. Максимальный flush_interval будет flush_interval + flush_jitter.

  flush_jitter = "10s"				# джиттер сброса по умолчанию для всех выходов. Это изменяет интервал сброса на случайную величину. Это сделано в 
  									# первую очередь для того, чтобы избежать больших всплесков записи для пользователей, использующих большое количество 
									# экземпляров Telegraf. т. е. джиттер 5 секунд и интервал 10 секунд означает, что сбросы будут происходить каждые 10-15 секунд.

  precision = ""					# собранные показатели округляются до точности, указанной как интервал. Точность НЕ будет использоваться для служебных входов. 
  									# Каждый отдельный служебный вход должен установить метку времени с соответствующей точностью.

  logfile = ""						# Имя файла, в который будет производиться запись при использовании logtarget "file". Если задана пустая строка,
  									# журналы записываются в stderr.

  debug = true						# журнал на уровне отладки.
  quiet = true						# записывать только сообщения об ошибках.

  hostname = "wordpress-service"	# заменить имя хоста по умолчанию, если пусто, используйте os.Hostname ()

  omit_hostname = false				# если установлено значение true, не устанавливайте тег "host" в телеграфном агенте.

# Отбросить все метрики для гостя и украсть использование ЦП
[[inputs.cpu]]
  percpu = true
  totalcpu = false

# Игнорировать точки монтирования по типу файловой системы.
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

# Считывать метрики дискового ввода-вывода по устройствам  - нет конфигурации
[[inputs.diskio]]

# Получить статистику ядра из / proc / stat -  нет конфигурации
[[inputs.kernel]]

# Получить количество процессов и сгруппировать их по статусу  -  нет конфигурации
[[inputs.processes]]

# Прочитать метрики об использовании памяти подкачки -  нет конфигурации
[[inputs.swap]]

# Прочитать метрики о загрузке системы и времени безотказной работы -  нет конфигурации
[[inputs.system]]